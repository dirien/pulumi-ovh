// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovh.ovh.CloudProject.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRegionsResult {
    private @Nullable List<String> hasServicesUps;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of regions associated with the project, filtered by services UP.
     * 
     */
    private List<String> names;
    private String serviceName;

    private GetRegionsResult() {}
    public List<String> hasServicesUps() {
        return this.hasServicesUps == null ? List.of() : this.hasServicesUps;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of regions associated with the project, filtered by services UP.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> hasServicesUps;
        private String id;
        private List<String> names;
        private String serviceName;
        public Builder() {}
        public Builder(GetRegionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hasServicesUps = defaults.hasServicesUps;
    	      this.id = defaults.id;
    	      this.names = defaults.names;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder hasServicesUps(@Nullable List<String> hasServicesUps) {

            this.hasServicesUps = hasServicesUps;
            return this;
        }
        public Builder hasServicesUps(String... hasServicesUps) {
            return hasServicesUps(List.of(hasServicesUps));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRegionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetRegionsResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetRegionsResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        public GetRegionsResult build() {
            final var _resultValue = new GetRegionsResult();
            _resultValue.hasServicesUps = hasServicesUps;
            _resultValue.id = id;
            _resultValue.names = names;
            _resultValue.serviceName = serviceName;
            return _resultValue;
        }
    }
}
