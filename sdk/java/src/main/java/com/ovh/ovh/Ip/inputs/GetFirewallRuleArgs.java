// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovh.ovh.Ip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class GetFirewallRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFirewallRuleArgs Empty = new GetFirewallRuleArgs();

    /**
     * The IP or the CIDR
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return The IP or the CIDR
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * IPv4 address
     * 
     */
    @Import(name="ipOnFirewall", required=true)
    private Output<String> ipOnFirewall;

    /**
     * @return IPv4 address
     * 
     */
    public Output<String> ipOnFirewall() {
        return this.ipOnFirewall;
    }

    /**
     * Rule position in the rules array
     * 
     */
    @Import(name="sequence", required=true)
    private Output<Double> sequence;

    /**
     * @return Rule position in the rules array
     * 
     */
    public Output<Double> sequence() {
        return this.sequence;
    }

    private GetFirewallRuleArgs() {}

    private GetFirewallRuleArgs(GetFirewallRuleArgs $) {
        this.ip = $.ip;
        this.ipOnFirewall = $.ipOnFirewall;
        this.sequence = $.sequence;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFirewallRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFirewallRuleArgs $;

        public Builder() {
            $ = new GetFirewallRuleArgs();
        }

        public Builder(GetFirewallRuleArgs defaults) {
            $ = new GetFirewallRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The IP or the CIDR
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP or the CIDR
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param ipOnFirewall IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipOnFirewall(Output<String> ipOnFirewall) {
            $.ipOnFirewall = ipOnFirewall;
            return this;
        }

        /**
         * @param ipOnFirewall IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipOnFirewall(String ipOnFirewall) {
            return ipOnFirewall(Output.of(ipOnFirewall));
        }

        /**
         * @param sequence Rule position in the rules array
         * 
         * @return builder
         * 
         */
        public Builder sequence(Output<Double> sequence) {
            $.sequence = sequence;
            return this;
        }

        /**
         * @param sequence Rule position in the rules array
         * 
         * @return builder
         * 
         */
        public Builder sequence(Double sequence) {
            return sequence(Output.of(sequence));
        }

        public GetFirewallRuleArgs build() {
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("GetFirewallRuleArgs", "ip");
            }
            if ($.ipOnFirewall == null) {
                throw new MissingRequiredPropertyException("GetFirewallRuleArgs", "ipOnFirewall");
            }
            if ($.sequence == null) {
                throw new MissingRequiredPropertyException("GetFirewallRuleArgs", "sequence");
            }
            return $;
        }
    }

}
