// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovh.ovh.Me.outputs;

import com.ovh.ovh.Me.outputs.GetInstallationTemplatePartitionSchemeHardwareRaid;
import com.ovh.ovh.Me.outputs.GetInstallationTemplatePartitionSchemePartition;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstallationTemplatePartitionScheme {
    private List<GetInstallationTemplatePartitionSchemeHardwareRaid> hardwareRaids;
    /**
     * @return Hardware RAID name.
     * 
     */
    private String name;
    private List<GetInstallationTemplatePartitionSchemePartition> partitions;
    /**
     * @return on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).
     * 
     */
    private Integer priority;

    private GetInstallationTemplatePartitionScheme() {}
    public List<GetInstallationTemplatePartitionSchemeHardwareRaid> hardwareRaids() {
        return this.hardwareRaids;
    }
    /**
     * @return Hardware RAID name.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetInstallationTemplatePartitionSchemePartition> partitions() {
        return this.partitions;
    }
    /**
     * @return on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstallationTemplatePartitionScheme defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstallationTemplatePartitionSchemeHardwareRaid> hardwareRaids;
        private String name;
        private List<GetInstallationTemplatePartitionSchemePartition> partitions;
        private Integer priority;
        public Builder() {}
        public Builder(GetInstallationTemplatePartitionScheme defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hardwareRaids = defaults.hardwareRaids;
    	      this.name = defaults.name;
    	      this.partitions = defaults.partitions;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder hardwareRaids(List<GetInstallationTemplatePartitionSchemeHardwareRaid> hardwareRaids) {
            if (hardwareRaids == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplatePartitionScheme", "hardwareRaids");
            }
            this.hardwareRaids = hardwareRaids;
            return this;
        }
        public Builder hardwareRaids(GetInstallationTemplatePartitionSchemeHardwareRaid... hardwareRaids) {
            return hardwareRaids(List.of(hardwareRaids));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplatePartitionScheme", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partitions(List<GetInstallationTemplatePartitionSchemePartition> partitions) {
            if (partitions == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplatePartitionScheme", "partitions");
            }
            this.partitions = partitions;
            return this;
        }
        public Builder partitions(GetInstallationTemplatePartitionSchemePartition... partitions) {
            return partitions(List.of(partitions));
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplatePartitionScheme", "priority");
            }
            this.priority = priority;
            return this;
        }
        public GetInstallationTemplatePartitionScheme build() {
            final var _resultValue = new GetInstallationTemplatePartitionScheme();
            _resultValue.hardwareRaids = hardwareRaids;
            _resultValue.name = name;
            _resultValue.partitions = partitions;
            _resultValue.priority = priority;
            return _resultValue;
        }
    }
}
