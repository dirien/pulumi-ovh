// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovh.ovh.Dedicated.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCephResult {
    /**
     * @return URN of the CEPH instance
     * 
     */
    private String CephURN;
    /**
     * @return list of CEPH monitors IPs
     * 
     */
    private List<String> cephMons;
    /**
     * @return CEPH cluster version
     * 
     */
    private String cephVersion;
    /**
     * @return CRUSH algorithm settings. Possible values
     * * OPTIMAL
     * * DEFAULT
     * * LEGACY
     * * BOBTAIL
     * * ARGONAUT
     * * FIREFLY
     * * HAMMER
     * * JEWEL
     * 
     */
    private String crushTunables;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return CEPH cluster label
     * 
     */
    private String label;
    /**
     * @return cluster region
     * 
     */
    private String region;
    private String serviceName;
    /**
     * @return Cluster size in TB
     * 
     */
    private Double size;
    /**
     * @return the state of the cluster
     * 
     */
    private String state;
    /**
     * @return the status of the service
     * 
     */
    private String status;

    private GetCephResult() {}
    /**
     * @return URN of the CEPH instance
     * 
     */
    public String CephURN() {
        return this.CephURN;
    }
    /**
     * @return list of CEPH monitors IPs
     * 
     */
    public List<String> cephMons() {
        return this.cephMons;
    }
    /**
     * @return CEPH cluster version
     * 
     */
    public String cephVersion() {
        return this.cephVersion;
    }
    /**
     * @return CRUSH algorithm settings. Possible values
     * * OPTIMAL
     * * DEFAULT
     * * LEGACY
     * * BOBTAIL
     * * ARGONAUT
     * * FIREFLY
     * * HAMMER
     * * JEWEL
     * 
     */
    public String crushTunables() {
        return this.crushTunables;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return CEPH cluster label
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return cluster region
     * 
     */
    public String region() {
        return this.region;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Cluster size in TB
     * 
     */
    public Double size() {
        return this.size;
    }
    /**
     * @return the state of the cluster
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return the status of the service
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCephResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String CephURN;
        private List<String> cephMons;
        private String cephVersion;
        private String crushTunables;
        private String id;
        private String label;
        private String region;
        private String serviceName;
        private Double size;
        private String state;
        private String status;
        public Builder() {}
        public Builder(GetCephResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.CephURN = defaults.CephURN;
    	      this.cephMons = defaults.cephMons;
    	      this.cephVersion = defaults.cephVersion;
    	      this.crushTunables = defaults.crushTunables;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.region = defaults.region;
    	      this.serviceName = defaults.serviceName;
    	      this.size = defaults.size;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder CephURN(String CephURN) {
            if (CephURN == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "CephURN");
            }
            this.CephURN = CephURN;
            return this;
        }
        @CustomType.Setter
        public Builder cephMons(List<String> cephMons) {
            if (cephMons == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "cephMons");
            }
            this.cephMons = cephMons;
            return this;
        }
        public Builder cephMons(String... cephMons) {
            return cephMons(List.of(cephMons));
        }
        @CustomType.Setter
        public Builder cephVersion(String cephVersion) {
            if (cephVersion == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "cephVersion");
            }
            this.cephVersion = cephVersion;
            return this;
        }
        @CustomType.Setter
        public Builder crushTunables(String crushTunables) {
            if (crushTunables == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "crushTunables");
            }
            this.crushTunables = crushTunables;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCephResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetCephResult build() {
            final var _resultValue = new GetCephResult();
            _resultValue.CephURN = CephURN;
            _resultValue.cephMons = cephMons;
            _resultValue.cephVersion = cephVersion;
            _resultValue.crushTunables = crushTunables;
            _resultValue.id = id;
            _resultValue.label = label;
            _resultValue.region = region;
            _resultValue.serviceName = serviceName;
            _resultValue.size = size;
            _resultValue.state = state;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
