// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovh.ovh.Me.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstallationTemplateInput {
    private String default_;
    /**
     * @return Information about this template.
     * 
     */
    private String description;
    private List<String> enums;
    private Boolean mandatory;
    /**
     * @return Hardware RAID name.
     * 
     */
    private String name;
    /**
     * @return Partition type.
     * 
     */
    private String type;

    private GetInstallationTemplateInput() {}
    public String default_() {
        return this.default_;
    }
    /**
     * @return Information about this template.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<String> enums() {
        return this.enums;
    }
    public Boolean mandatory() {
        return this.mandatory;
    }
    /**
     * @return Hardware RAID name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Partition type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstallationTemplateInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String default_;
        private String description;
        private List<String> enums;
        private Boolean mandatory;
        private String name;
        private String type;
        public Builder() {}
        public Builder(GetInstallationTemplateInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.description = defaults.description;
    	      this.enums = defaults.enums;
    	      this.mandatory = defaults.mandatory;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter("default")
        public Builder default_(String default_) {
            if (default_ == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateInput", "default_");
            }
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateInput", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enums(List<String> enums) {
            if (enums == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateInput", "enums");
            }
            this.enums = enums;
            return this;
        }
        public Builder enums(String... enums) {
            return enums(List.of(enums));
        }
        @CustomType.Setter
        public Builder mandatory(Boolean mandatory) {
            if (mandatory == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateInput", "mandatory");
            }
            this.mandatory = mandatory;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateInput", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateInput", "type");
            }
            this.type = type;
            return this;
        }
        public GetInstallationTemplateInput build() {
            final var _resultValue = new GetInstallationTemplateInput();
            _resultValue.default_ = default_;
            _resultValue.description = description;
            _resultValue.enums = enums;
            _resultValue.mandatory = mandatory;
            _resultValue.name = name;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
