// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.Me.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstallationTemplateInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstallationTemplateInputArgs Empty = new InstallationTemplateInputArgs();

    @Import(name="default")
    private @Nullable Output<String> default_;

    public Optional<Output<String>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * information about this template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return information about this template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enums")
    private @Nullable Output<List<String>> enums;

    public Optional<Output<List<String>>> enums() {
        return Optional.ofNullable(this.enums);
    }

    @Import(name="mandatory")
    private @Nullable Output<Boolean> mandatory;

    public Optional<Output<Boolean>> mandatory() {
        return Optional.ofNullable(this.mandatory);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private InstallationTemplateInputArgs() {}

    private InstallationTemplateInputArgs(InstallationTemplateInputArgs $) {
        this.default_ = $.default_;
        this.description = $.description;
        this.enums = $.enums;
        this.mandatory = $.mandatory;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstallationTemplateInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstallationTemplateInputArgs $;

        public Builder() {
            $ = new InstallationTemplateInputArgs();
        }

        public Builder(InstallationTemplateInputArgs defaults) {
            $ = new InstallationTemplateInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable Output<String> default_) {
            $.default_ = default_;
            return this;
        }

        public Builder default_(String default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param description information about this template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description information about this template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enums(@Nullable Output<List<String>> enums) {
            $.enums = enums;
            return this;
        }

        public Builder enums(List<String> enums) {
            return enums(Output.of(enums));
        }

        public Builder enums(String... enums) {
            return enums(List.of(enums));
        }

        public Builder mandatory(@Nullable Output<Boolean> mandatory) {
            $.mandatory = mandatory;
            return this;
        }

        public Builder mandatory(Boolean mandatory) {
            return mandatory(Output.of(mandatory));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public InstallationTemplateInputArgs build() {
            return $;
        }
    }

}
