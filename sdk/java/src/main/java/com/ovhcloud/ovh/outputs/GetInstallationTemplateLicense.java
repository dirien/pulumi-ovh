// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.outputs;

import com.ovhcloud.ovh.outputs.GetInstallationTemplateLicenseO;
import com.ovhcloud.ovh.outputs.GetInstallationTemplateLicenseUsage;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstallationTemplateLicense {
    private List<GetInstallationTemplateLicenseO> os;
    private List<GetInstallationTemplateLicenseUsage> usages;

    private GetInstallationTemplateLicense() {}
    public List<GetInstallationTemplateLicenseO> os() {
        return this.os;
    }
    public List<GetInstallationTemplateLicenseUsage> usages() {
        return this.usages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstallationTemplateLicense defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstallationTemplateLicenseO> os;
        private List<GetInstallationTemplateLicenseUsage> usages;
        public Builder() {}
        public Builder(GetInstallationTemplateLicense defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.os = defaults.os;
    	      this.usages = defaults.usages;
        }

        @CustomType.Setter
        public Builder os(List<GetInstallationTemplateLicenseO> os) {
            if (os == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateLicense", "os");
            }
            this.os = os;
            return this;
        }
        public Builder os(GetInstallationTemplateLicenseO... os) {
            return os(List.of(os));
        }
        @CustomType.Setter
        public Builder usages(List<GetInstallationTemplateLicenseUsage> usages) {
            if (usages == null) {
              throw new MissingRequiredPropertyException("GetInstallationTemplateLicense", "usages");
            }
            this.usages = usages;
            return this;
        }
        public Builder usages(GetInstallationTemplateLicenseUsage... usages) {
            return usages(List.of(usages));
        }
        public GetInstallationTemplateLicense build() {
            final var _resultValue = new GetInstallationTemplateLicense();
            _resultValue.os = os;
            _resultValue.usages = usages;
            return _resultValue;
        }
    }
}
