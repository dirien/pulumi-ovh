// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.Dedicated.outputs;

import com.ovhcloud.ovh.Dedicated.outputs.GetServerSpecificationsNetworkOlaAvailableMode;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServerSpecificationsNetworkOla {
    /**
     * @return Is the OLA feature available
     * 
     */
    private Boolean available;
    /**
     * @return Supported modes
     * 
     */
    private List<GetServerSpecificationsNetworkOlaAvailableMode> availableModes;
    /**
     * @return Supported modes (DEPRECATED)
     * 
     */
    private List<String> supportedModes;

    private GetServerSpecificationsNetworkOla() {}
    /**
     * @return Is the OLA feature available
     * 
     */
    public Boolean available() {
        return this.available;
    }
    /**
     * @return Supported modes
     * 
     */
    public List<GetServerSpecificationsNetworkOlaAvailableMode> availableModes() {
        return this.availableModes;
    }
    /**
     * @return Supported modes (DEPRECATED)
     * 
     */
    public List<String> supportedModes() {
        return this.supportedModes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerSpecificationsNetworkOla defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean available;
        private List<GetServerSpecificationsNetworkOlaAvailableMode> availableModes;
        private List<String> supportedModes;
        public Builder() {}
        public Builder(GetServerSpecificationsNetworkOla defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.available = defaults.available;
    	      this.availableModes = defaults.availableModes;
    	      this.supportedModes = defaults.supportedModes;
        }

        @CustomType.Setter
        public Builder available(Boolean available) {
            if (available == null) {
              throw new MissingRequiredPropertyException("GetServerSpecificationsNetworkOla", "available");
            }
            this.available = available;
            return this;
        }
        @CustomType.Setter
        public Builder availableModes(List<GetServerSpecificationsNetworkOlaAvailableMode> availableModes) {
            if (availableModes == null) {
              throw new MissingRequiredPropertyException("GetServerSpecificationsNetworkOla", "availableModes");
            }
            this.availableModes = availableModes;
            return this;
        }
        public Builder availableModes(GetServerSpecificationsNetworkOlaAvailableMode... availableModes) {
            return availableModes(List.of(availableModes));
        }
        @CustomType.Setter
        public Builder supportedModes(List<String> supportedModes) {
            if (supportedModes == null) {
              throw new MissingRequiredPropertyException("GetServerSpecificationsNetworkOla", "supportedModes");
            }
            this.supportedModes = supportedModes;
            return this;
        }
        public Builder supportedModes(String... supportedModes) {
            return supportedModes(List.of(supportedModes));
        }
        public GetServerSpecificationsNetworkOla build() {
            final var _resultValue = new GetServerSpecificationsNetworkOla();
            _resultValue.available = available;
            _resultValue.availableModes = availableModes;
            _resultValue.supportedModes = supportedModes;
            return _resultValue;
        }
    }
}
