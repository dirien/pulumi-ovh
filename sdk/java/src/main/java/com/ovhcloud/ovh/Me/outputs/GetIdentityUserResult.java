// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.Me.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIdentityUserResult {
    /**
     * @return User&#39;s identity URN.
     * 
     */
    private String UserURN;
    /**
     * @return Creation date of this user.
     * 
     */
    private String creation;
    /**
     * @return User description.
     * 
     */
    private String description;
    /**
     * @return User&#39;s email.
     * 
     */
    private String email;
    /**
     * @return User&#39;s group.
     * 
     */
    private String group;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Last update of this user.
     * 
     */
    private String lastUpdate;
    /**
     * @return User&#39;s login suffix.
     * 
     */
    private String login;
    /**
     * @return When the user changed his password for the last time.
     * 
     */
    private String passwordLastUpdate;
    /**
     * @return Current user&#39;s status.
     * 
     */
    private String status;
    private String user;

    private GetIdentityUserResult() {}
    /**
     * @return User&#39;s identity URN.
     * 
     */
    public String UserURN() {
        return this.UserURN;
    }
    /**
     * @return Creation date of this user.
     * 
     */
    public String creation() {
        return this.creation;
    }
    /**
     * @return User description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return User&#39;s email.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return User&#39;s group.
     * 
     */
    public String group() {
        return this.group;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Last update of this user.
     * 
     */
    public String lastUpdate() {
        return this.lastUpdate;
    }
    /**
     * @return User&#39;s login suffix.
     * 
     */
    public String login() {
        return this.login;
    }
    /**
     * @return When the user changed his password for the last time.
     * 
     */
    public String passwordLastUpdate() {
        return this.passwordLastUpdate;
    }
    /**
     * @return Current user&#39;s status.
     * 
     */
    public String status() {
        return this.status;
    }
    public String user() {
        return this.user;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIdentityUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String UserURN;
        private String creation;
        private String description;
        private String email;
        private String group;
        private String id;
        private String lastUpdate;
        private String login;
        private String passwordLastUpdate;
        private String status;
        private String user;
        public Builder() {}
        public Builder(GetIdentityUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.UserURN = defaults.UserURN;
    	      this.creation = defaults.creation;
    	      this.description = defaults.description;
    	      this.email = defaults.email;
    	      this.group = defaults.group;
    	      this.id = defaults.id;
    	      this.lastUpdate = defaults.lastUpdate;
    	      this.login = defaults.login;
    	      this.passwordLastUpdate = defaults.passwordLastUpdate;
    	      this.status = defaults.status;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder UserURN(String UserURN) {
            if (UserURN == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "UserURN");
            }
            this.UserURN = UserURN;
            return this;
        }
        @CustomType.Setter
        public Builder creation(String creation) {
            if (creation == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "creation");
            }
            this.creation = creation;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder group(String group) {
            if (group == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "group");
            }
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdate(String lastUpdate) {
            if (lastUpdate == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "lastUpdate");
            }
            this.lastUpdate = lastUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder login(String login) {
            if (login == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "login");
            }
            this.login = login;
            return this;
        }
        @CustomType.Setter
        public Builder passwordLastUpdate(String passwordLastUpdate) {
            if (passwordLastUpdate == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "passwordLastUpdate");
            }
            this.passwordLastUpdate = passwordLastUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder user(String user) {
            if (user == null) {
              throw new MissingRequiredPropertyException("GetIdentityUserResult", "user");
            }
            this.user = user;
            return this;
        }
        public GetIdentityUserResult build() {
            final var _resultValue = new GetIdentityUserResult();
            _resultValue.UserURN = UserURN;
            _resultValue.creation = creation;
            _resultValue.description = description;
            _resultValue.email = email;
            _resultValue.group = group;
            _resultValue.id = id;
            _resultValue.lastUpdate = lastUpdate;
            _resultValue.login = login;
            _resultValue.passwordLastUpdate = passwordLastUpdate;
            _resultValue.status = status;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
