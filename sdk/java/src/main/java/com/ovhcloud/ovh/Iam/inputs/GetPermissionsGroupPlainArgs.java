// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.Iam.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPermissionsGroupPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPermissionsGroupPlainArgs Empty = new GetPermissionsGroupPlainArgs();

    @Import(name="allows")
    private @Nullable List<String> allows;

    public Optional<List<String>> allows() {
        return Optional.ofNullable(this.allows);
    }

    @Import(name="denies")
    private @Nullable List<String> denies;

    public Optional<List<String>> denies() {
        return Optional.ofNullable(this.denies);
    }

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="excepts")
    private @Nullable List<String> excepts;

    public Optional<List<String>> excepts() {
        return Optional.ofNullable(this.excepts);
    }

    @Import(name="updatedAt")
    private @Nullable String updatedAt;

    public Optional<String> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="urn", required=true)
    private String urn;

    public String urn() {
        return this.urn;
    }

    private GetPermissionsGroupPlainArgs() {}

    private GetPermissionsGroupPlainArgs(GetPermissionsGroupPlainArgs $) {
        this.allows = $.allows;
        this.denies = $.denies;
        this.description = $.description;
        this.excepts = $.excepts;
        this.updatedAt = $.updatedAt;
        this.urn = $.urn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPermissionsGroupPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPermissionsGroupPlainArgs $;

        public Builder() {
            $ = new GetPermissionsGroupPlainArgs();
        }

        public Builder(GetPermissionsGroupPlainArgs defaults) {
            $ = new GetPermissionsGroupPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder allows(@Nullable List<String> allows) {
            $.allows = allows;
            return this;
        }

        public Builder allows(String... allows) {
            return allows(List.of(allows));
        }

        public Builder denies(@Nullable List<String> denies) {
            $.denies = denies;
            return this;
        }

        public Builder denies(String... denies) {
            return denies(List.of(denies));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder excepts(@Nullable List<String> excepts) {
            $.excepts = excepts;
            return this;
        }

        public Builder excepts(String... excepts) {
            return excepts(List.of(excepts));
        }

        public Builder updatedAt(@Nullable String updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder urn(String urn) {
            $.urn = urn;
            return this;
        }

        public GetPermissionsGroupPlainArgs build() {
            if ($.urn == null) {
                throw new MissingRequiredPropertyException("GetPermissionsGroupPlainArgs", "urn");
            }
            return $;
        }
    }

}
