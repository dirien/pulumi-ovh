// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.Ip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MitigationState extends com.pulumi.resources.ResourceArgs {

    public static final MitigationState Empty = new MitigationState();

    /**
     * Set on true if the IP is on auto-mitigation
     * 
     */
    @Import(name="auto")
    private @Nullable Output<Boolean> auto;

    /**
     * @return Set on true if the IP is on auto-mitigation
     * 
     */
    public Optional<Output<Boolean>> auto() {
        return Optional.ofNullable(this.auto);
    }

    /**
     * The IP or the CIDR
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return The IP or the CIDR
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * IPv4 address
     * * ` permanent  ` - Set on true if the IP is on permanent mitigation
     * 
     */
    @Import(name="ipOnMitigation")
    private @Nullable Output<String> ipOnMitigation;

    /**
     * @return IPv4 address
     * * ` permanent  ` - Set on true if the IP is on permanent mitigation
     * 
     */
    public Optional<Output<String>> ipOnMitigation() {
        return Optional.ofNullable(this.ipOnMitigation);
    }

    /**
     * Set on true if your ip is on permanent mitigation
     * 
     */
    @Import(name="permanent")
    private @Nullable Output<Boolean> permanent;

    /**
     * @return Set on true if your ip is on permanent mitigation
     * 
     */
    public Optional<Output<Boolean>> permanent() {
        return Optional.ofNullable(this.permanent);
    }

    /**
     * Current state of the IP on mitigation
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Current state of the IP on mitigation
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private MitigationState() {}

    private MitigationState(MitigationState $) {
        this.auto = $.auto;
        this.ip = $.ip;
        this.ipOnMitigation = $.ipOnMitigation;
        this.permanent = $.permanent;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MitigationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MitigationState $;

        public Builder() {
            $ = new MitigationState();
        }

        public Builder(MitigationState defaults) {
            $ = new MitigationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param auto Set on true if the IP is on auto-mitigation
         * 
         * @return builder
         * 
         */
        public Builder auto(@Nullable Output<Boolean> auto) {
            $.auto = auto;
            return this;
        }

        /**
         * @param auto Set on true if the IP is on auto-mitigation
         * 
         * @return builder
         * 
         */
        public Builder auto(Boolean auto) {
            return auto(Output.of(auto));
        }

        /**
         * @param ip The IP or the CIDR
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP or the CIDR
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param ipOnMitigation IPv4 address
         * * ` permanent  ` - Set on true if the IP is on permanent mitigation
         * 
         * @return builder
         * 
         */
        public Builder ipOnMitigation(@Nullable Output<String> ipOnMitigation) {
            $.ipOnMitigation = ipOnMitigation;
            return this;
        }

        /**
         * @param ipOnMitigation IPv4 address
         * * ` permanent  ` - Set on true if the IP is on permanent mitigation
         * 
         * @return builder
         * 
         */
        public Builder ipOnMitigation(String ipOnMitigation) {
            return ipOnMitigation(Output.of(ipOnMitigation));
        }

        /**
         * @param permanent Set on true if your ip is on permanent mitigation
         * 
         * @return builder
         * 
         */
        public Builder permanent(@Nullable Output<Boolean> permanent) {
            $.permanent = permanent;
            return this;
        }

        /**
         * @param permanent Set on true if your ip is on permanent mitigation
         * 
         * @return builder
         * 
         */
        public Builder permanent(Boolean permanent) {
            return permanent(Output.of(permanent));
        }

        /**
         * @param state Current state of the IP on mitigation
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Current state of the IP on mitigation
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public MitigationState build() {
            return $;
        }
    }

}
