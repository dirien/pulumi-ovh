// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.ovh.CloudProject.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGatewayInterfaceResult {
    /**
     * @return ID of the gateway
     * 
     */
    private String id;
    /**
     * @return ID of the interface
     * 
     */
    private String interfaceId;
    /**
     * @return IP of the interface
     * 
     */
    private String ip;
    /**
     * @return Network ID of the interface
     * 
     */
    private String networkId;
    /**
     * @return Region of the gateway
     * 
     */
    private String region;
    /**
     * @return ID of the cloud project
     * 
     */
    private String serviceName;
    /**
     * @return ID of the subnet to add
     * 
     */
    private String subnetId;

    private GetGatewayInterfaceResult() {}
    /**
     * @return ID of the gateway
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the interface
     * 
     */
    public String interfaceId() {
        return this.interfaceId;
    }
    /**
     * @return IP of the interface
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return Network ID of the interface
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return Region of the gateway
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return ID of the cloud project
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return ID of the subnet to add
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayInterfaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String interfaceId;
        private String ip;
        private String networkId;
        private String region;
        private String serviceName;
        private String subnetId;
        public Builder() {}
        public Builder(GetGatewayInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.interfaceId = defaults.interfaceId;
    	      this.ip = defaults.ip;
    	      this.networkId = defaults.networkId;
    	      this.region = defaults.region;
    	      this.serviceName = defaults.serviceName;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceId(String interfaceId) {
            if (interfaceId == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "interfaceId");
            }
            this.interfaceId = interfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetGatewayInterfaceResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public GetGatewayInterfaceResult build() {
            final var _resultValue = new GetGatewayInterfaceResult();
            _resultValue.id = id;
            _resultValue.interfaceId = interfaceId;
            _resultValue.ip = ip;
            _resultValue.networkId = networkId;
            _resultValue.region = region;
            _resultValue.serviceName = serviceName;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
