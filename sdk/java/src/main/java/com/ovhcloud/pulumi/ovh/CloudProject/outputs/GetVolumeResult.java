// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVolumeResult {
    private String id;
    /**
     * @return The name of the volume (E.g.: &#34;GRA&#34;, meaning Gravelines, for region &#34;GRA1&#34;)
     * 
     */
    private String name;
    /**
     * @return The region name where volume is available
     * 
     */
    private String regionName;
    /**
     * @return The id of the public cloud project.
     * 
     */
    private String serviceName;
    /**
     * @return The size of the volume
     * 
     */
    private Double size;
    /**
     * @return The id of the volume
     * 
     */
    private String volumeId;

    private GetVolumeResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the volume (E.g.: &#34;GRA&#34;, meaning Gravelines, for region &#34;GRA1&#34;)
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The region name where volume is available
     * 
     */
    public String regionName() {
        return this.regionName;
    }
    /**
     * @return The id of the public cloud project.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The size of the volume
     * 
     */
    public Double size() {
        return this.size;
    }
    /**
     * @return The id of the volume
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String regionName;
        private String serviceName;
        private Double size;
        private String volumeId;
        public Builder() {}
        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.regionName = defaults.regionName;
    	      this.serviceName = defaults.serviceName;
    	      this.size = defaults.size;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            if (regionName == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "regionName");
            }
            this.regionName = regionName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(String volumeId) {
            if (volumeId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "volumeId");
            }
            this.volumeId = volumeId;
            return this;
        }
        public GetVolumeResult build() {
            final var _resultValue = new GetVolumeResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.regionName = regionName;
            _resultValue.serviceName = serviceName;
            _resultValue.size = size;
            _resultValue.volumeId = volumeId;
            return _resultValue;
        }
    }
}
