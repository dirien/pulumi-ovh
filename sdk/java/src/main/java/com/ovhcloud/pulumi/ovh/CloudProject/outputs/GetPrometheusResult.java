// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.ovhcloud.pulumi.ovh.CloudProject.outputs.GetPrometheusTarget;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPrometheusResult {
    /**
     * @return See Argument Reference above.
     * 
     */
    private String clusterId;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String engine;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String serviceName;
    /**
     * @return List of all endpoint targets.
     * * `Host` - Host of the endpoint.
     * * `Port` - Connection port for the endpoint.
     * 
     */
    private List<GetPrometheusTarget> targets;
    /**
     * @return name of the prometheus user.
     * 
     */
    private String username;

    private GetPrometheusResult() {}
    /**
     * @return See Argument Reference above.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String engine() {
        return this.engine;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return List of all endpoint targets.
     * * `Host` - Host of the endpoint.
     * * `Port` - Connection port for the endpoint.
     * 
     */
    public List<GetPrometheusTarget> targets() {
        return this.targets;
    }
    /**
     * @return name of the prometheus user.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrometheusResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String engine;
        private String id;
        private String serviceName;
        private List<GetPrometheusTarget> targets;
        private String username;
        public Builder() {}
        public Builder(GetPrometheusResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.engine = defaults.engine;
    	      this.id = defaults.id;
    	      this.serviceName = defaults.serviceName;
    	      this.targets = defaults.targets;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetPrometheusResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder engine(String engine) {
            if (engine == null) {
              throw new MissingRequiredPropertyException("GetPrometheusResult", "engine");
            }
            this.engine = engine;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPrometheusResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetPrometheusResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder targets(List<GetPrometheusTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("GetPrometheusResult", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(GetPrometheusTarget... targets) {
            return targets(List.of(targets));
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetPrometheusResult", "username");
            }
            this.username = username;
            return this;
        }
        public GetPrometheusResult build() {
            final var _resultValue = new GetPrometheusResult();
            _resultValue.clusterId = clusterId;
            _resultValue.engine = engine;
            _resultValue.id = id;
            _resultValue.serviceName = serviceName;
            _resultValue.targets = targets;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
