// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dbaas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class LogsOutputOpenSearchIndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsOutputOpenSearchIndexArgs Empty = new LogsOutputOpenSearchIndexArgs();

    /**
     * Index description
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Index description
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Number of shards
     * 
     */
    @Import(name="nbShard", required=true)
    private Output<Integer> nbShard;

    /**
     * @return Number of shards
     * 
     */
    public Output<Integer> nbShard() {
        return this.nbShard;
    }

    /**
     * The service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Index suffix
     * 
     */
    @Import(name="suffix", required=true)
    private Output<String> suffix;

    /**
     * @return Index suffix
     * 
     */
    public Output<String> suffix() {
        return this.suffix;
    }

    private LogsOutputOpenSearchIndexArgs() {}

    private LogsOutputOpenSearchIndexArgs(LogsOutputOpenSearchIndexArgs $) {
        this.description = $.description;
        this.nbShard = $.nbShard;
        this.serviceName = $.serviceName;
        this.suffix = $.suffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsOutputOpenSearchIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsOutputOpenSearchIndexArgs $;

        public Builder() {
            $ = new LogsOutputOpenSearchIndexArgs();
        }

        public Builder(LogsOutputOpenSearchIndexArgs defaults) {
            $ = new LogsOutputOpenSearchIndexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Index description
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Index description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param nbShard Number of shards
         * 
         * @return builder
         * 
         */
        public Builder nbShard(Output<Integer> nbShard) {
            $.nbShard = nbShard;
            return this;
        }

        /**
         * @param nbShard Number of shards
         * 
         * @return builder
         * 
         */
        public Builder nbShard(Integer nbShard) {
            return nbShard(Output.of(nbShard));
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param suffix Index suffix
         * 
         * @return builder
         * 
         */
        public Builder suffix(Output<String> suffix) {
            $.suffix = suffix;
            return this;
        }

        /**
         * @param suffix Index suffix
         * 
         * @return builder
         * 
         */
        public Builder suffix(String suffix) {
            return suffix(Output.of(suffix));
        }

        public LogsOutputOpenSearchIndexArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchIndexArgs", "description");
            }
            if ($.nbShard == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchIndexArgs", "nbShard");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchIndexArgs", "serviceName");
            }
            if ($.suffix == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchIndexArgs", "suffix");
            }
            return $;
        }
    }

}
