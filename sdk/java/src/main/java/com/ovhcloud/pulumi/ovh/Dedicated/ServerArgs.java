// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dedicated;

import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerDetailsArgs;
import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerPlanArgs;
import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerPlanOptionArgs;
import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerUserMetadataArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerArgs Empty = new ServerArgs();

    /**
     * Boot id of the server
     * 
     */
    @Import(name="bootId")
    private @Nullable Output<Double> bootId;

    /**
     * @return Boot id of the server
     * 
     */
    public Optional<Output<Double>> bootId() {
        return Optional.ofNullable(this.bootId);
    }

    /**
     * Boot script of the server
     * 
     */
    @Import(name="bootScript")
    private @Nullable Output<String> bootScript;

    /**
     * @return Boot script of the server
     * 
     */
    public Optional<Output<String>> bootScript() {
        return Optional.ofNullable(this.bootScript);
    }

    /**
     * A structure describing informations about installation custom
     * 
     */
    @Import(name="details")
    private @Nullable Output<ServerDetailsArgs> details;

    /**
     * @return A structure describing informations about installation custom
     * 
     */
    public Optional<Output<ServerDetailsArgs>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * Resource display name
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Resource display name
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Icmp monitoring state
     * 
     */
    @Import(name="monitoring")
    private @Nullable Output<Boolean> monitoring;

    /**
     * @return Icmp monitoring state
     * 
     */
    public Optional<Output<Boolean>> monitoring() {
        return Optional.ofNullable(this.monitoring);
    }

    /**
     * Prevent datacenter intervention
     * 
     */
    @Import(name="noIntervention")
    private @Nullable Output<Boolean> noIntervention;

    /**
     * @return Prevent datacenter intervention
     * 
     */
    public Optional<Output<Boolean>> noIntervention() {
        return Optional.ofNullable(this.noIntervention);
    }

    /**
     * OVH subsidiaries
     * 
     */
    @Import(name="ovhSubsidiary", required=true)
    private Output<String> ovhSubsidiary;

    /**
     * @return OVH subsidiaries
     * 
     */
    public Output<String> ovhSubsidiary() {
        return this.ovhSubsidiary;
    }

    /**
     * Partition scheme name
     * 
     */
    @Import(name="partitionSchemeName")
    private @Nullable Output<String> partitionSchemeName;

    /**
     * @return Partition scheme name
     * 
     */
    public Optional<Output<String>> partitionSchemeName() {
        return Optional.ofNullable(this.partitionSchemeName);
    }

    @Import(name="planOptions")
    private @Nullable Output<List<ServerPlanOptionArgs>> planOptions;

    public Optional<Output<List<ServerPlanOptionArgs>>> planOptions() {
        return Optional.ofNullable(this.planOptions);
    }

    @Import(name="plans")
    private @Nullable Output<List<ServerPlanArgs>> plans;

    public Optional<Output<List<ServerPlanArgs>>> plans() {
        return Optional.ofNullable(this.plans);
    }

    /**
     * Rescue mail of the server
     * 
     */
    @Import(name="rescueMail")
    private @Nullable Output<String> rescueMail;

    /**
     * @return Rescue mail of the server
     * 
     */
    public Optional<Output<String>> rescueMail() {
        return Optional.ofNullable(this.rescueMail);
    }

    /**
     * Public SSH Key used in the rescue mode
     * 
     */
    @Import(name="rescueSshKey")
    private @Nullable Output<String> rescueSshKey;

    /**
     * @return Public SSH Key used in the rescue mode
     * 
     */
    public Optional<Output<String>> rescueSshKey() {
        return Optional.ofNullable(this.rescueSshKey);
    }

    /**
     * Root device of the server
     * 
     */
    @Import(name="rootDevice")
    private @Nullable Output<String> rootDevice;

    /**
     * @return Root device of the server
     * 
     */
    public Optional<Output<String>> rootDevice() {
        return Optional.ofNullable(this.rootDevice);
    }

    /**
     * All states a Dedicated can be in (error, hacked, hackedBlocked, ok)
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return All states a Dedicated can be in (error, hacked, hackedBlocked, ok)
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Template name
     * 
     */
    @Import(name="templateName")
    private @Nullable Output<String> templateName;

    /**
     * @return Template name
     * 
     */
    public Optional<Output<String>> templateName() {
        return Optional.ofNullable(this.templateName);
    }

    /**
     * Metadata
     * 
     */
    @Import(name="userMetadatas")
    private @Nullable Output<List<ServerUserMetadataArgs>> userMetadatas;

    /**
     * @return Metadata
     * 
     */
    public Optional<Output<List<ServerUserMetadataArgs>>> userMetadatas() {
        return Optional.ofNullable(this.userMetadatas);
    }

    private ServerArgs() {}

    private ServerArgs(ServerArgs $) {
        this.bootId = $.bootId;
        this.bootScript = $.bootScript;
        this.details = $.details;
        this.displayName = $.displayName;
        this.monitoring = $.monitoring;
        this.noIntervention = $.noIntervention;
        this.ovhSubsidiary = $.ovhSubsidiary;
        this.partitionSchemeName = $.partitionSchemeName;
        this.planOptions = $.planOptions;
        this.plans = $.plans;
        this.rescueMail = $.rescueMail;
        this.rescueSshKey = $.rescueSshKey;
        this.rootDevice = $.rootDevice;
        this.state = $.state;
        this.templateName = $.templateName;
        this.userMetadatas = $.userMetadatas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerArgs $;

        public Builder() {
            $ = new ServerArgs();
        }

        public Builder(ServerArgs defaults) {
            $ = new ServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bootId Boot id of the server
         * 
         * @return builder
         * 
         */
        public Builder bootId(@Nullable Output<Double> bootId) {
            $.bootId = bootId;
            return this;
        }

        /**
         * @param bootId Boot id of the server
         * 
         * @return builder
         * 
         */
        public Builder bootId(Double bootId) {
            return bootId(Output.of(bootId));
        }

        /**
         * @param bootScript Boot script of the server
         * 
         * @return builder
         * 
         */
        public Builder bootScript(@Nullable Output<String> bootScript) {
            $.bootScript = bootScript;
            return this;
        }

        /**
         * @param bootScript Boot script of the server
         * 
         * @return builder
         * 
         */
        public Builder bootScript(String bootScript) {
            return bootScript(Output.of(bootScript));
        }

        /**
         * @param details A structure describing informations about installation custom
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<ServerDetailsArgs> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details A structure describing informations about installation custom
         * 
         * @return builder
         * 
         */
        public Builder details(ServerDetailsArgs details) {
            return details(Output.of(details));
        }

        /**
         * @param displayName Resource display name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Resource display name
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param monitoring Icmp monitoring state
         * 
         * @return builder
         * 
         */
        public Builder monitoring(@Nullable Output<Boolean> monitoring) {
            $.monitoring = monitoring;
            return this;
        }

        /**
         * @param monitoring Icmp monitoring state
         * 
         * @return builder
         * 
         */
        public Builder monitoring(Boolean monitoring) {
            return monitoring(Output.of(monitoring));
        }

        /**
         * @param noIntervention Prevent datacenter intervention
         * 
         * @return builder
         * 
         */
        public Builder noIntervention(@Nullable Output<Boolean> noIntervention) {
            $.noIntervention = noIntervention;
            return this;
        }

        /**
         * @param noIntervention Prevent datacenter intervention
         * 
         * @return builder
         * 
         */
        public Builder noIntervention(Boolean noIntervention) {
            return noIntervention(Output.of(noIntervention));
        }

        /**
         * @param ovhSubsidiary OVH subsidiaries
         * 
         * @return builder
         * 
         */
        public Builder ovhSubsidiary(Output<String> ovhSubsidiary) {
            $.ovhSubsidiary = ovhSubsidiary;
            return this;
        }

        /**
         * @param ovhSubsidiary OVH subsidiaries
         * 
         * @return builder
         * 
         */
        public Builder ovhSubsidiary(String ovhSubsidiary) {
            return ovhSubsidiary(Output.of(ovhSubsidiary));
        }

        /**
         * @param partitionSchemeName Partition scheme name
         * 
         * @return builder
         * 
         */
        public Builder partitionSchemeName(@Nullable Output<String> partitionSchemeName) {
            $.partitionSchemeName = partitionSchemeName;
            return this;
        }

        /**
         * @param partitionSchemeName Partition scheme name
         * 
         * @return builder
         * 
         */
        public Builder partitionSchemeName(String partitionSchemeName) {
            return partitionSchemeName(Output.of(partitionSchemeName));
        }

        public Builder planOptions(@Nullable Output<List<ServerPlanOptionArgs>> planOptions) {
            $.planOptions = planOptions;
            return this;
        }

        public Builder planOptions(List<ServerPlanOptionArgs> planOptions) {
            return planOptions(Output.of(planOptions));
        }

        public Builder planOptions(ServerPlanOptionArgs... planOptions) {
            return planOptions(List.of(planOptions));
        }

        public Builder plans(@Nullable Output<List<ServerPlanArgs>> plans) {
            $.plans = plans;
            return this;
        }

        public Builder plans(List<ServerPlanArgs> plans) {
            return plans(Output.of(plans));
        }

        public Builder plans(ServerPlanArgs... plans) {
            return plans(List.of(plans));
        }

        /**
         * @param rescueMail Rescue mail of the server
         * 
         * @return builder
         * 
         */
        public Builder rescueMail(@Nullable Output<String> rescueMail) {
            $.rescueMail = rescueMail;
            return this;
        }

        /**
         * @param rescueMail Rescue mail of the server
         * 
         * @return builder
         * 
         */
        public Builder rescueMail(String rescueMail) {
            return rescueMail(Output.of(rescueMail));
        }

        /**
         * @param rescueSshKey Public SSH Key used in the rescue mode
         * 
         * @return builder
         * 
         */
        public Builder rescueSshKey(@Nullable Output<String> rescueSshKey) {
            $.rescueSshKey = rescueSshKey;
            return this;
        }

        /**
         * @param rescueSshKey Public SSH Key used in the rescue mode
         * 
         * @return builder
         * 
         */
        public Builder rescueSshKey(String rescueSshKey) {
            return rescueSshKey(Output.of(rescueSshKey));
        }

        /**
         * @param rootDevice Root device of the server
         * 
         * @return builder
         * 
         */
        public Builder rootDevice(@Nullable Output<String> rootDevice) {
            $.rootDevice = rootDevice;
            return this;
        }

        /**
         * @param rootDevice Root device of the server
         * 
         * @return builder
         * 
         */
        public Builder rootDevice(String rootDevice) {
            return rootDevice(Output.of(rootDevice));
        }

        /**
         * @param state All states a Dedicated can be in (error, hacked, hackedBlocked, ok)
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state All states a Dedicated can be in (error, hacked, hackedBlocked, ok)
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param templateName Template name
         * 
         * @return builder
         * 
         */
        public Builder templateName(@Nullable Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName Template name
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        /**
         * @param userMetadatas Metadata
         * 
         * @return builder
         * 
         */
        public Builder userMetadatas(@Nullable Output<List<ServerUserMetadataArgs>> userMetadatas) {
            $.userMetadatas = userMetadatas;
            return this;
        }

        /**
         * @param userMetadatas Metadata
         * 
         * @return builder
         * 
         */
        public Builder userMetadatas(List<ServerUserMetadataArgs> userMetadatas) {
            return userMetadatas(Output.of(userMetadatas));
        }

        /**
         * @param userMetadatas Metadata
         * 
         * @return builder
         * 
         */
        public Builder userMetadatas(ServerUserMetadataArgs... userMetadatas) {
            return userMetadatas(List.of(userMetadatas));
        }

        public ServerArgs build() {
            if ($.ovhSubsidiary == null) {
                throw new MissingRequiredPropertyException("ServerArgs", "ovhSubsidiary");
            }
            return $;
        }
    }

}
