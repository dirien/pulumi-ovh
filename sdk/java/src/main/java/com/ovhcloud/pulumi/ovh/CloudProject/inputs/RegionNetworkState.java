// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.RegionNetworkSubnetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionNetworkState extends com.pulumi.resources.ResourceArgs {

    public static final RegionNetworkState Empty = new RegionNetworkState();

    /**
     * Name of the network
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the network
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Network region returned by the API
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Network region returned by the API
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Network region
     * 
     */
    @Import(name="regionName")
    private @Nullable Output<String> regionName;

    /**
     * @return Network region
     * 
     */
    public Optional<Output<String>> regionName() {
        return Optional.ofNullable(this.regionName);
    }

    /**
     * The id of the public cloud project
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Parameters to create a subnet
     * 
     */
    @Import(name="subnet")
    private @Nullable Output<RegionNetworkSubnetArgs> subnet;

    /**
     * @return Parameters to create a subnet
     * 
     */
    public Optional<Output<RegionNetworkSubnetArgs>> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Network visibility
     * 
     */
    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    /**
     * @return Network visibility
     * 
     */
    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    /**
     * VLAN ID, between 1 and 4000
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Double> vlanId;

    /**
     * @return VLAN ID, between 1 and 4000
     * 
     */
    public Optional<Output<Double>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private RegionNetworkState() {}

    private RegionNetworkState(RegionNetworkState $) {
        this.name = $.name;
        this.region = $.region;
        this.regionName = $.regionName;
        this.serviceName = $.serviceName;
        this.subnet = $.subnet;
        this.visibility = $.visibility;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionNetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionNetworkState $;

        public Builder() {
            $ = new RegionNetworkState();
        }

        public Builder(RegionNetworkState defaults) {
            $ = new RegionNetworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the network
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the network
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region Network region returned by the API
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Network region returned by the API
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param regionName Network region
         * 
         * @return builder
         * 
         */
        public Builder regionName(@Nullable Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param regionName Network region
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        /**
         * @param serviceName The id of the public cloud project
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param subnet Parameters to create a subnet
         * 
         * @return builder
         * 
         */
        public Builder subnet(@Nullable Output<RegionNetworkSubnetArgs> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet Parameters to create a subnet
         * 
         * @return builder
         * 
         */
        public Builder subnet(RegionNetworkSubnetArgs subnet) {
            return subnet(Output.of(subnet));
        }

        /**
         * @param visibility Network visibility
         * 
         * @return builder
         * 
         */
        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        /**
         * @param visibility Network visibility
         * 
         * @return builder
         * 
         */
        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        /**
         * @param vlanId VLAN ID, between 1 and 4000
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Double> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId VLAN ID, between 1 and 4000
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Double vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public RegionNetworkState build() {
            return $;
        }
    }

}
