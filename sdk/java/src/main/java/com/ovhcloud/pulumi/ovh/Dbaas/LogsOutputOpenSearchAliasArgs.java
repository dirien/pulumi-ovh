// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dbaas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsOutputOpenSearchAliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsOutputOpenSearchAliasArgs Empty = new LogsOutputOpenSearchAliasArgs();

    /**
     * Index description
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Index description
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * List of attached indexes id
     * 
     */
    @Import(name="indexes")
    private @Nullable Output<List<String>> indexes;

    /**
     * @return List of attached indexes id
     * 
     */
    public Optional<Output<List<String>>> indexes() {
        return Optional.ofNullable(this.indexes);
    }

    /**
     * Number of indices linked
     * 
     */
    @Import(name="nbIndex")
    private @Nullable Output<Integer> nbIndex;

    /**
     * @return Number of indices linked
     * 
     */
    public Optional<Output<Integer>> nbIndex() {
        return Optional.ofNullable(this.nbIndex);
    }

    /**
     * Number of streams linked
     * 
     */
    @Import(name="nbStream")
    private @Nullable Output<Integer> nbStream;

    /**
     * @return Number of streams linked
     * 
     */
    public Optional<Output<Integer>> nbStream() {
        return Optional.ofNullable(this.nbStream);
    }

    /**
     * The service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * List of attached streams id
     * 
     */
    @Import(name="streams")
    private @Nullable Output<List<String>> streams;

    /**
     * @return List of attached streams id
     * 
     */
    public Optional<Output<List<String>>> streams() {
        return Optional.ofNullable(this.streams);
    }

    /**
     * Index suffix
     * 
     */
    @Import(name="suffix", required=true)
    private Output<String> suffix;

    /**
     * @return Index suffix
     * 
     */
    public Output<String> suffix() {
        return this.suffix;
    }

    private LogsOutputOpenSearchAliasArgs() {}

    private LogsOutputOpenSearchAliasArgs(LogsOutputOpenSearchAliasArgs $) {
        this.description = $.description;
        this.indexes = $.indexes;
        this.nbIndex = $.nbIndex;
        this.nbStream = $.nbStream;
        this.serviceName = $.serviceName;
        this.streams = $.streams;
        this.suffix = $.suffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsOutputOpenSearchAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsOutputOpenSearchAliasArgs $;

        public Builder() {
            $ = new LogsOutputOpenSearchAliasArgs();
        }

        public Builder(LogsOutputOpenSearchAliasArgs defaults) {
            $ = new LogsOutputOpenSearchAliasArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Index description
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Index description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param indexes List of attached indexes id
         * 
         * @return builder
         * 
         */
        public Builder indexes(@Nullable Output<List<String>> indexes) {
            $.indexes = indexes;
            return this;
        }

        /**
         * @param indexes List of attached indexes id
         * 
         * @return builder
         * 
         */
        public Builder indexes(List<String> indexes) {
            return indexes(Output.of(indexes));
        }

        /**
         * @param indexes List of attached indexes id
         * 
         * @return builder
         * 
         */
        public Builder indexes(String... indexes) {
            return indexes(List.of(indexes));
        }

        /**
         * @param nbIndex Number of indices linked
         * 
         * @return builder
         * 
         */
        public Builder nbIndex(@Nullable Output<Integer> nbIndex) {
            $.nbIndex = nbIndex;
            return this;
        }

        /**
         * @param nbIndex Number of indices linked
         * 
         * @return builder
         * 
         */
        public Builder nbIndex(Integer nbIndex) {
            return nbIndex(Output.of(nbIndex));
        }

        /**
         * @param nbStream Number of streams linked
         * 
         * @return builder
         * 
         */
        public Builder nbStream(@Nullable Output<Integer> nbStream) {
            $.nbStream = nbStream;
            return this;
        }

        /**
         * @param nbStream Number of streams linked
         * 
         * @return builder
         * 
         */
        public Builder nbStream(Integer nbStream) {
            return nbStream(Output.of(nbStream));
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param streams List of attached streams id
         * 
         * @return builder
         * 
         */
        public Builder streams(@Nullable Output<List<String>> streams) {
            $.streams = streams;
            return this;
        }

        /**
         * @param streams List of attached streams id
         * 
         * @return builder
         * 
         */
        public Builder streams(List<String> streams) {
            return streams(Output.of(streams));
        }

        /**
         * @param streams List of attached streams id
         * 
         * @return builder
         * 
         */
        public Builder streams(String... streams) {
            return streams(List.of(streams));
        }

        /**
         * @param suffix Index suffix
         * 
         * @return builder
         * 
         */
        public Builder suffix(Output<String> suffix) {
            $.suffix = suffix;
            return this;
        }

        /**
         * @param suffix Index suffix
         * 
         * @return builder
         * 
         */
        public Builder suffix(String suffix) {
            return suffix(Output.of(suffix));
        }

        public LogsOutputOpenSearchAliasArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchAliasArgs", "description");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchAliasArgs", "serviceName");
            }
            if ($.suffix == null) {
                throw new MissingRequiredPropertyException("LogsOutputOpenSearchAliasArgs", "suffix");
            }
            return $;
        }
    }

}
