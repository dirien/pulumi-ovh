// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dbaas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLogsOutputOpenSearchIndexResult {
    /**
     * @return If set, notify when size is near 80, 90 or 100 % of its maximum capacity
     * 
     */
    private Boolean alertNotifyEnabled;
    /**
     * @return Index creation
     * 
     */
    private String createdAt;
    /**
     * @return Current index size (in bytes)
     * 
     */
    private Integer currentSize;
    /**
     * @return Index description
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Index ID
     * 
     */
    private String indexId;
    /**
     * @return Indicates if you are allowed to edit entry
     * 
     */
    private Boolean isEditable;
    /**
     * @return Maximum index size (in bytes)
     * 
     */
    private Integer maxSize;
    /**
     * @return Index name
     * 
     */
    private String name;
    /**
     * @return Number of shard
     * 
     */
    private Integer nbShard;
    private String serviceName;
    /**
     * @return Index last update
     * 
     */
    private String updatedAt;

    private GetLogsOutputOpenSearchIndexResult() {}
    /**
     * @return If set, notify when size is near 80, 90 or 100 % of its maximum capacity
     * 
     */
    public Boolean alertNotifyEnabled() {
        return this.alertNotifyEnabled;
    }
    /**
     * @return Index creation
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Current index size (in bytes)
     * 
     */
    public Integer currentSize() {
        return this.currentSize;
    }
    /**
     * @return Index description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Index ID
     * 
     */
    public String indexId() {
        return this.indexId;
    }
    /**
     * @return Indicates if you are allowed to edit entry
     * 
     */
    public Boolean isEditable() {
        return this.isEditable;
    }
    /**
     * @return Maximum index size (in bytes)
     * 
     */
    public Integer maxSize() {
        return this.maxSize;
    }
    /**
     * @return Index name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number of shard
     * 
     */
    public Integer nbShard() {
        return this.nbShard;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Index last update
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogsOutputOpenSearchIndexResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean alertNotifyEnabled;
        private String createdAt;
        private Integer currentSize;
        private String description;
        private String id;
        private String indexId;
        private Boolean isEditable;
        private Integer maxSize;
        private String name;
        private Integer nbShard;
        private String serviceName;
        private String updatedAt;
        public Builder() {}
        public Builder(GetLogsOutputOpenSearchIndexResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertNotifyEnabled = defaults.alertNotifyEnabled;
    	      this.createdAt = defaults.createdAt;
    	      this.currentSize = defaults.currentSize;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.indexId = defaults.indexId;
    	      this.isEditable = defaults.isEditable;
    	      this.maxSize = defaults.maxSize;
    	      this.name = defaults.name;
    	      this.nbShard = defaults.nbShard;
    	      this.serviceName = defaults.serviceName;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder alertNotifyEnabled(Boolean alertNotifyEnabled) {
            if (alertNotifyEnabled == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "alertNotifyEnabled");
            }
            this.alertNotifyEnabled = alertNotifyEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder currentSize(Integer currentSize) {
            if (currentSize == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "currentSize");
            }
            this.currentSize = currentSize;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder indexId(String indexId) {
            if (indexId == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "indexId");
            }
            this.indexId = indexId;
            return this;
        }
        @CustomType.Setter
        public Builder isEditable(Boolean isEditable) {
            if (isEditable == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "isEditable");
            }
            this.isEditable = isEditable;
            return this;
        }
        @CustomType.Setter
        public Builder maxSize(Integer maxSize) {
            if (maxSize == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "maxSize");
            }
            this.maxSize = maxSize;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nbShard(Integer nbShard) {
            if (nbShard == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "nbShard");
            }
            this.nbShard = nbShard;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetLogsOutputOpenSearchIndexResult build() {
            final var _resultValue = new GetLogsOutputOpenSearchIndexResult();
            _resultValue.alertNotifyEnabled = alertNotifyEnabled;
            _resultValue.createdAt = createdAt;
            _resultValue.currentSize = currentSize;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.indexId = indexId;
            _resultValue.isEditable = isEditable;
            _resultValue.maxSize = maxSize;
            _resultValue.name = name;
            _resultValue.nbShard = nbShard;
            _resultValue.serviceName = serviceName;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
