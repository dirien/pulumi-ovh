// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dedicated.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNasHAPartitionResult {
    /**
     * @return Percentage of partition space used in %
     * 
     */
    private Integer capacity;
    /**
     * @return A brief description of the partition
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return one of &#34;NFS&#34;, &#34;CIFS&#34; or &#34;NFS_CIFS&#34;
     * 
     */
    private String protocol;
    private String serviceName;
    /**
     * @return size of the partition in GB
     * 
     */
    private Integer size;
    /**
     * @return Percentage of partition space used by snapshots in %
     * 
     */
    private Integer usedBySnapshots;

    private GetNasHAPartitionResult() {}
    /**
     * @return Percentage of partition space used in %
     * 
     */
    public Integer capacity() {
        return this.capacity;
    }
    /**
     * @return A brief description of the partition
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return one of &#34;NFS&#34;, &#34;CIFS&#34; or &#34;NFS_CIFS&#34;
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return size of the partition in GB
     * 
     */
    public Integer size() {
        return this.size;
    }
    /**
     * @return Percentage of partition space used by snapshots in %
     * 
     */
    public Integer usedBySnapshots() {
        return this.usedBySnapshots;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNasHAPartitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer capacity;
        private String description;
        private String id;
        private String name;
        private String protocol;
        private String serviceName;
        private Integer size;
        private Integer usedBySnapshots;
        public Builder() {}
        public Builder(GetNasHAPartitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.protocol = defaults.protocol;
    	      this.serviceName = defaults.serviceName;
    	      this.size = defaults.size;
    	      this.usedBySnapshots = defaults.usedBySnapshots;
        }

        @CustomType.Setter
        public Builder capacity(Integer capacity) {
            if (capacity == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "capacity");
            }
            this.capacity = capacity;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder usedBySnapshots(Integer usedBySnapshots) {
            if (usedBySnapshots == null) {
              throw new MissingRequiredPropertyException("GetNasHAPartitionResult", "usedBySnapshots");
            }
            this.usedBySnapshots = usedBySnapshots;
            return this;
        }
        public GetNasHAPartitionResult build() {
            final var _resultValue = new GetNasHAPartitionResult();
            _resultValue.capacity = capacity;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.protocol = protocol;
            _resultValue.serviceName = serviceName;
            _resultValue.size = size;
            _resultValue.usedBySnapshots = usedBySnapshots;
            return _resultValue;
        }
    }
}
