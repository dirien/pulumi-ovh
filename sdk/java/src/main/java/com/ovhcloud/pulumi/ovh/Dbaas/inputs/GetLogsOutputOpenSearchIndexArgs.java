// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dbaas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLogsOutputOpenSearchIndexArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogsOutputOpenSearchIndexArgs Empty = new GetLogsOutputOpenSearchIndexArgs();

    /**
     * Index name
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Index name
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Number of shard
     * 
     */
    @Import(name="nbShard")
    private @Nullable Output<Integer> nbShard;

    /**
     * @return Number of shard
     * 
     */
    public Optional<Output<Integer>> nbShard() {
        return Optional.ofNullable(this.nbShard);
    }

    /**
     * The service name. It&#39;s the ID of your Logs Data Platform instance.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The service name. It&#39;s the ID of your Logs Data Platform instance.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private GetLogsOutputOpenSearchIndexArgs() {}

    private GetLogsOutputOpenSearchIndexArgs(GetLogsOutputOpenSearchIndexArgs $) {
        this.name = $.name;
        this.nbShard = $.nbShard;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogsOutputOpenSearchIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogsOutputOpenSearchIndexArgs $;

        public Builder() {
            $ = new GetLogsOutputOpenSearchIndexArgs();
        }

        public Builder(GetLogsOutputOpenSearchIndexArgs defaults) {
            $ = new GetLogsOutputOpenSearchIndexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Index name
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Index name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nbShard Number of shard
         * 
         * @return builder
         * 
         */
        public Builder nbShard(@Nullable Output<Integer> nbShard) {
            $.nbShard = nbShard;
            return this;
        }

        /**
         * @param nbShard Number of shard
         * 
         * @return builder
         * 
         */
        public Builder nbShard(Integer nbShard) {
            return nbShard(Output.of(nbShard));
        }

        /**
         * @param serviceName The service name. It&#39;s the ID of your Logs Data Platform instance.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name. It&#39;s the ID of your Logs Data Platform instance.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public GetLogsOutputOpenSearchIndexArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexArgs", "name");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetLogsOutputOpenSearchIndexArgs", "serviceName");
            }
            return $;
        }
    }

}
