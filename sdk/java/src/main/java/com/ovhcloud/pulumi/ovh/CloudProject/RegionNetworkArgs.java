// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.RegionNetworkSubnetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegionNetworkArgs Empty = new RegionNetworkArgs();

    /**
     * Name of the network
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the network
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Network region
     * 
     */
    @Import(name="regionName", required=true)
    private Output<String> regionName;

    /**
     * @return Network region
     * 
     */
    public Output<String> regionName() {
        return this.regionName;
    }

    /**
     * The id of the public cloud project
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The id of the public cloud project
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Parameters to create a subnet
     * 
     */
    @Import(name="subnet", required=true)
    private Output<RegionNetworkSubnetArgs> subnet;

    /**
     * @return Parameters to create a subnet
     * 
     */
    public Output<RegionNetworkSubnetArgs> subnet() {
        return this.subnet;
    }

    /**
     * VLAN ID, between 1 and 4000
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Double> vlanId;

    /**
     * @return VLAN ID, between 1 and 4000
     * 
     */
    public Optional<Output<Double>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private RegionNetworkArgs() {}

    private RegionNetworkArgs(RegionNetworkArgs $) {
        this.name = $.name;
        this.regionName = $.regionName;
        this.serviceName = $.serviceName;
        this.subnet = $.subnet;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionNetworkArgs $;

        public Builder() {
            $ = new RegionNetworkArgs();
        }

        public Builder(RegionNetworkArgs defaults) {
            $ = new RegionNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the network
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the network
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param regionName Network region
         * 
         * @return builder
         * 
         */
        public Builder regionName(Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param regionName Network region
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        /**
         * @param serviceName The id of the public cloud project
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param subnet Parameters to create a subnet
         * 
         * @return builder
         * 
         */
        public Builder subnet(Output<RegionNetworkSubnetArgs> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet Parameters to create a subnet
         * 
         * @return builder
         * 
         */
        public Builder subnet(RegionNetworkSubnetArgs subnet) {
            return subnet(Output.of(subnet));
        }

        /**
         * @param vlanId VLAN ID, between 1 and 4000
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Double> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId VLAN ID, between 1 and 4000
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Double vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public RegionNetworkArgs build() {
            if ($.regionName == null) {
                throw new MissingRequiredPropertyException("RegionNetworkArgs", "regionName");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("RegionNetworkArgs", "serviceName");
            }
            if ($.subnet == null) {
                throw new MissingRequiredPropertyException("RegionNetworkArgs", "subnet");
            }
            return $;
        }
    }

}
