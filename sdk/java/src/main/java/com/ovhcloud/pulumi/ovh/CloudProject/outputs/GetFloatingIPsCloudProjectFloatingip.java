// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.ovhcloud.pulumi.ovh.CloudProject.outputs.GetFloatingIPsCloudProjectFloatingipAssociatedEntity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFloatingIPsCloudProjectFloatingip {
    /**
     * @return Associated entity with the floating IP
     * 
     */
    private GetFloatingIPsCloudProjectFloatingipAssociatedEntity associatedEntity;
    /**
     * @return ID of the floating IP
     * 
     */
    private String id;
    /**
     * @return Value of the floating IP
     * 
     */
    private String ip;
    /**
     * @return ID of the network
     * 
     */
    private String networkId;
    /**
     * @return Floating ip region
     * 
     */
    private String region;
    /**
     * @return Status of the floating IP (active┃down┃error)
     * 
     */
    private String status;

    private GetFloatingIPsCloudProjectFloatingip() {}
    /**
     * @return Associated entity with the floating IP
     * 
     */
    public GetFloatingIPsCloudProjectFloatingipAssociatedEntity associatedEntity() {
        return this.associatedEntity;
    }
    /**
     * @return ID of the floating IP
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Value of the floating IP
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return ID of the network
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return Floating ip region
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Status of the floating IP (active┃down┃error)
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFloatingIPsCloudProjectFloatingip defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetFloatingIPsCloudProjectFloatingipAssociatedEntity associatedEntity;
        private String id;
        private String ip;
        private String networkId;
        private String region;
        private String status;
        public Builder() {}
        public Builder(GetFloatingIPsCloudProjectFloatingip defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedEntity = defaults.associatedEntity;
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.networkId = defaults.networkId;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder associatedEntity(GetFloatingIPsCloudProjectFloatingipAssociatedEntity associatedEntity) {
            if (associatedEntity == null) {
              throw new MissingRequiredPropertyException("GetFloatingIPsCloudProjectFloatingip", "associatedEntity");
            }
            this.associatedEntity = associatedEntity;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFloatingIPsCloudProjectFloatingip", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetFloatingIPsCloudProjectFloatingip", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetFloatingIPsCloudProjectFloatingip", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetFloatingIPsCloudProjectFloatingip", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetFloatingIPsCloudProjectFloatingip", "status");
            }
            this.status = status;
            return this;
        }
        public GetFloatingIPsCloudProjectFloatingip build() {
            final var _resultValue = new GetFloatingIPsCloudProjectFloatingip();
            _resultValue.associatedEntity = associatedEntity;
            _resultValue.id = id;
            _resultValue.ip = ip;
            _resultValue.networkId = networkId;
            _resultValue.region = region;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
