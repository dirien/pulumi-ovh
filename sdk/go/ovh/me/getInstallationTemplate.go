// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package me

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a custom installation template available for dedicated servers.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/go/ovh/Me"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Me.GetInstallationTemplate(ctx, &me.GetInstallationTemplateArgs{
//				TemplateName: "mytemplate",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstallationTemplate(ctx *pulumi.Context, args *LookupInstallationTemplateArgs, opts ...pulumi.InvokeOption) (*LookupInstallationTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstallationTemplateResult
	err := ctx.Invoke("ovh:Me/getInstallationTemplate:getInstallationTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstallationTemplate.
type LookupInstallationTemplateArgs struct {
	// Template name.
	TemplateName string `pulumi:"templateName"`
}

// A collection of values returned by getInstallationTemplate.
type LookupInstallationTemplateResult struct {
	// Template bit format (32 or 64).
	BitFormat int `pulumi:"bitFormat"`
	// Category of this template (informative only).
	Category       string                                 `pulumi:"category"`
	Customizations []GetInstallationTemplateCustomization `pulumi:"customizations"`
	// Information about this template.
	Description string `pulumi:"description"`
	// Distribution this template is based on.
	Distribution string `pulumi:"distribution"`
	// End of install date of the template.
	EndOfInstall string `pulumi:"endOfInstall"`
	// Template family type (bsd,linux,solaris,windows).
	Family string `pulumi:"family"`
	// Filesystems available.
	Filesystems []string `pulumi:"filesystems"`
	// Distribution supports hardware raid configuration through the OVHcloud API.
	//
	// Deprecated: This will be deprecated in the next release
	HardRaidConfiguration bool `pulumi:"hardRaidConfiguration"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Represents the questions of the expected answers in the userMetadata field.
	Inputs []GetInstallationTemplateInput `pulumi:"inputs"`
	// Whether this template supports LVM.
	LvmReady bool `pulumi:"lvmReady"`
	// Partitioning customization is not available for this OS template.
	NoPartitioning   bool                                         `pulumi:"noPartitioning"`
	PartitionSchemes []GetInstallationTemplatePartitionSchemeType `pulumi:"partitionSchemes"`
	// Template supports RAID0 and RAID1 on 2 disks.
	SoftRaidOnlyMirroring bool `pulumi:"softRaidOnlyMirroring"`
	// Subfamily of the template.
	Subfamily    string `pulumi:"subfamily"`
	TemplateName string `pulumi:"templateName"`
}

func LookupInstallationTemplateOutput(ctx *pulumi.Context, args LookupInstallationTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupInstallationTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstallationTemplateResultOutput, error) {
			args := v.(LookupInstallationTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Me/getInstallationTemplate:getInstallationTemplate", args, LookupInstallationTemplateResultOutput{}, options).(LookupInstallationTemplateResultOutput), nil
		}).(LookupInstallationTemplateResultOutput)
}

// A collection of arguments for invoking getInstallationTemplate.
type LookupInstallationTemplateOutputArgs struct {
	// Template name.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
}

func (LookupInstallationTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstallationTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getInstallationTemplate.
type LookupInstallationTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupInstallationTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstallationTemplateResult)(nil)).Elem()
}

func (o LookupInstallationTemplateResultOutput) ToLookupInstallationTemplateResultOutput() LookupInstallationTemplateResultOutput {
	return o
}

func (o LookupInstallationTemplateResultOutput) ToLookupInstallationTemplateResultOutputWithContext(ctx context.Context) LookupInstallationTemplateResultOutput {
	return o
}

// Template bit format (32 or 64).
func (o LookupInstallationTemplateResultOutput) BitFormat() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) int { return v.BitFormat }).(pulumi.IntOutput)
}

// Category of this template (informative only).
func (o LookupInstallationTemplateResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.Category }).(pulumi.StringOutput)
}

func (o LookupInstallationTemplateResultOutput) Customizations() GetInstallationTemplateCustomizationArrayOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) []GetInstallationTemplateCustomization {
		return v.Customizations
	}).(GetInstallationTemplateCustomizationArrayOutput)
}

// Information about this template.
func (o LookupInstallationTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// Distribution this template is based on.
func (o LookupInstallationTemplateResultOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.Distribution }).(pulumi.StringOutput)
}

// End of install date of the template.
func (o LookupInstallationTemplateResultOutput) EndOfInstall() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.EndOfInstall }).(pulumi.StringOutput)
}

// Template family type (bsd,linux,solaris,windows).
func (o LookupInstallationTemplateResultOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.Family }).(pulumi.StringOutput)
}

// Filesystems available.
func (o LookupInstallationTemplateResultOutput) Filesystems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) []string { return v.Filesystems }).(pulumi.StringArrayOutput)
}

// Distribution supports hardware raid configuration through the OVHcloud API.
//
// Deprecated: This will be deprecated in the next release
func (o LookupInstallationTemplateResultOutput) HardRaidConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) bool { return v.HardRaidConfiguration }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstallationTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Represents the questions of the expected answers in the userMetadata field.
func (o LookupInstallationTemplateResultOutput) Inputs() GetInstallationTemplateInputArrayOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) []GetInstallationTemplateInput { return v.Inputs }).(GetInstallationTemplateInputArrayOutput)
}

// Whether this template supports LVM.
func (o LookupInstallationTemplateResultOutput) LvmReady() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) bool { return v.LvmReady }).(pulumi.BoolOutput)
}

// Partitioning customization is not available for this OS template.
func (o LookupInstallationTemplateResultOutput) NoPartitioning() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) bool { return v.NoPartitioning }).(pulumi.BoolOutput)
}

func (o LookupInstallationTemplateResultOutput) PartitionSchemes() GetInstallationTemplatePartitionSchemeTypeArrayOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) []GetInstallationTemplatePartitionSchemeType {
		return v.PartitionSchemes
	}).(GetInstallationTemplatePartitionSchemeTypeArrayOutput)
}

// Template supports RAID0 and RAID1 on 2 disks.
func (o LookupInstallationTemplateResultOutput) SoftRaidOnlyMirroring() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) bool { return v.SoftRaidOnlyMirroring }).(pulumi.BoolOutput)
}

// Subfamily of the template.
func (o LookupInstallationTemplateResultOutput) Subfamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.Subfamily }).(pulumi.StringOutput)
}

func (o LookupInstallationTemplateResultOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstallationTemplateResult) string { return v.TemplateName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstallationTemplateResultOutput{})
}
