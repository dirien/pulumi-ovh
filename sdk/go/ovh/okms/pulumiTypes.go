// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okms

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type OkmsIam struct {
	// (String) Resource display name
	DisplayName *string `pulumi:"displayName"`
	// (String) Unique identifier of the resource
	Id *string `pulumi:"id"`
	// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
	Tags map[string]string `pulumi:"tags"`
	// (String) Unique resource name used in policies
	Urn *string `pulumi:"urn"`
}

// OkmsIamInput is an input type that accepts OkmsIamArgs and OkmsIamOutput values.
// You can construct a concrete instance of `OkmsIamInput` via:
//
//	OkmsIamArgs{...}
type OkmsIamInput interface {
	pulumi.Input

	ToOkmsIamOutput() OkmsIamOutput
	ToOkmsIamOutputWithContext(context.Context) OkmsIamOutput
}

type OkmsIamArgs struct {
	// (String) Resource display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (String) Unique identifier of the resource
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// (String) Unique resource name used in policies
	Urn pulumi.StringPtrInput `pulumi:"urn"`
}

func (OkmsIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OkmsIam)(nil)).Elem()
}

func (i OkmsIamArgs) ToOkmsIamOutput() OkmsIamOutput {
	return i.ToOkmsIamOutputWithContext(context.Background())
}

func (i OkmsIamArgs) ToOkmsIamOutputWithContext(ctx context.Context) OkmsIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OkmsIamOutput)
}

func (i OkmsIamArgs) ToOkmsIamPtrOutput() OkmsIamPtrOutput {
	return i.ToOkmsIamPtrOutputWithContext(context.Background())
}

func (i OkmsIamArgs) ToOkmsIamPtrOutputWithContext(ctx context.Context) OkmsIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OkmsIamOutput).ToOkmsIamPtrOutputWithContext(ctx)
}

// OkmsIamPtrInput is an input type that accepts OkmsIamArgs, OkmsIamPtr and OkmsIamPtrOutput values.
// You can construct a concrete instance of `OkmsIamPtrInput` via:
//
//	        OkmsIamArgs{...}
//
//	or:
//
//	        nil
type OkmsIamPtrInput interface {
	pulumi.Input

	ToOkmsIamPtrOutput() OkmsIamPtrOutput
	ToOkmsIamPtrOutputWithContext(context.Context) OkmsIamPtrOutput
}

type okmsIamPtrType OkmsIamArgs

func OkmsIamPtr(v *OkmsIamArgs) OkmsIamPtrInput {
	return (*okmsIamPtrType)(v)
}

func (*okmsIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OkmsIam)(nil)).Elem()
}

func (i *okmsIamPtrType) ToOkmsIamPtrOutput() OkmsIamPtrOutput {
	return i.ToOkmsIamPtrOutputWithContext(context.Background())
}

func (i *okmsIamPtrType) ToOkmsIamPtrOutputWithContext(ctx context.Context) OkmsIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OkmsIamPtrOutput)
}

type OkmsIamOutput struct{ *pulumi.OutputState }

func (OkmsIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OkmsIam)(nil)).Elem()
}

func (o OkmsIamOutput) ToOkmsIamOutput() OkmsIamOutput {
	return o
}

func (o OkmsIamOutput) ToOkmsIamOutputWithContext(ctx context.Context) OkmsIamOutput {
	return o
}

func (o OkmsIamOutput) ToOkmsIamPtrOutput() OkmsIamPtrOutput {
	return o.ToOkmsIamPtrOutputWithContext(context.Background())
}

func (o OkmsIamOutput) ToOkmsIamPtrOutputWithContext(ctx context.Context) OkmsIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OkmsIam) *OkmsIam {
		return &v
	}).(OkmsIamPtrOutput)
}

// (String) Resource display name
func (o OkmsIamOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OkmsIam) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (String) Unique identifier of the resource
func (o OkmsIamOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OkmsIam) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
func (o OkmsIamOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OkmsIam) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// (String) Unique resource name used in policies
func (o OkmsIamOutput) Urn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OkmsIam) *string { return v.Urn }).(pulumi.StringPtrOutput)
}

type OkmsIamPtrOutput struct{ *pulumi.OutputState }

func (OkmsIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OkmsIam)(nil)).Elem()
}

func (o OkmsIamPtrOutput) ToOkmsIamPtrOutput() OkmsIamPtrOutput {
	return o
}

func (o OkmsIamPtrOutput) ToOkmsIamPtrOutputWithContext(ctx context.Context) OkmsIamPtrOutput {
	return o
}

func (o OkmsIamPtrOutput) Elem() OkmsIamOutput {
	return o.ApplyT(func(v *OkmsIam) OkmsIam {
		if v != nil {
			return *v
		}
		var ret OkmsIam
		return ret
	}).(OkmsIamOutput)
}

// (String) Resource display name
func (o OkmsIamPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OkmsIam) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// (String) Unique identifier of the resource
func (o OkmsIamPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OkmsIam) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
func (o OkmsIamPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OkmsIam) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// (String) Unique resource name used in policies
func (o OkmsIamPtrOutput) Urn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OkmsIam) *string {
		if v == nil {
			return nil
		}
		return v.Urn
	}).(pulumi.StringPtrOutput)
}

type GetOkmsResourceIam struct {
	// (String) Resource display name
	DisplayName string `pulumi:"displayName"`
	// Should be set to the ID of your KMS
	Id string `pulumi:"id"`
	// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
	Tags map[string]string `pulumi:"tags"`
	// (String) Unique resource name used in policies
	Urn string `pulumi:"urn"`
}

// GetOkmsResourceIamInput is an input type that accepts GetOkmsResourceIamArgs and GetOkmsResourceIamOutput values.
// You can construct a concrete instance of `GetOkmsResourceIamInput` via:
//
//	GetOkmsResourceIamArgs{...}
type GetOkmsResourceIamInput interface {
	pulumi.Input

	ToGetOkmsResourceIamOutput() GetOkmsResourceIamOutput
	ToGetOkmsResourceIamOutputWithContext(context.Context) GetOkmsResourceIamOutput
}

type GetOkmsResourceIamArgs struct {
	// (String) Resource display name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Should be set to the ID of your KMS
	Id pulumi.StringInput `pulumi:"id"`
	// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// (String) Unique resource name used in policies
	Urn pulumi.StringInput `pulumi:"urn"`
}

func (GetOkmsResourceIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOkmsResourceIam)(nil)).Elem()
}

func (i GetOkmsResourceIamArgs) ToGetOkmsResourceIamOutput() GetOkmsResourceIamOutput {
	return i.ToGetOkmsResourceIamOutputWithContext(context.Background())
}

func (i GetOkmsResourceIamArgs) ToGetOkmsResourceIamOutputWithContext(ctx context.Context) GetOkmsResourceIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOkmsResourceIamOutput)
}

type GetOkmsResourceIamOutput struct{ *pulumi.OutputState }

func (GetOkmsResourceIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOkmsResourceIam)(nil)).Elem()
}

func (o GetOkmsResourceIamOutput) ToGetOkmsResourceIamOutput() GetOkmsResourceIamOutput {
	return o
}

func (o GetOkmsResourceIamOutput) ToGetOkmsResourceIamOutputWithContext(ctx context.Context) GetOkmsResourceIamOutput {
	return o
}

// (String) Resource display name
func (o GetOkmsResourceIamOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsResourceIam) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Should be set to the ID of your KMS
func (o GetOkmsResourceIamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsResourceIam) string { return v.Id }).(pulumi.StringOutput)
}

// (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
func (o GetOkmsResourceIamOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetOkmsResourceIam) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// (String) Unique resource name used in policies
func (o GetOkmsResourceIamOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsResourceIam) string { return v.Urn }).(pulumi.StringOutput)
}

type GetOkmsServiceKeyJwkKey struct {
	// The algorithm intended to be used with the key
	Alg string `pulumi:"alg"`
	// The cryptographic curve used with the key
	Crv string `pulumi:"crv"`
	// The exponent value for the RSA public key
	E string `pulumi:"e"`
	// The operation for which the key is intended to be used
	KeyOps []string `pulumi:"keyOps"`
	// key ID parameter used to match a specific key
	Kid string `pulumi:"kid"`
	// Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC
	Kty string `pulumi:"kty"`
	// The modulus value for the RSA public key
	N string `pulumi:"n"`
	// The intended use of the public key
	Use string `pulumi:"use"`
	// The x coordinate for the Elliptic Curve point
	X string `pulumi:"x"`
	// The y coordinate for the Elliptic Curve point
	Y string `pulumi:"y"`
}

// GetOkmsServiceKeyJwkKeyInput is an input type that accepts GetOkmsServiceKeyJwkKeyArgs and GetOkmsServiceKeyJwkKeyOutput values.
// You can construct a concrete instance of `GetOkmsServiceKeyJwkKeyInput` via:
//
//	GetOkmsServiceKeyJwkKeyArgs{...}
type GetOkmsServiceKeyJwkKeyInput interface {
	pulumi.Input

	ToGetOkmsServiceKeyJwkKeyOutput() GetOkmsServiceKeyJwkKeyOutput
	ToGetOkmsServiceKeyJwkKeyOutputWithContext(context.Context) GetOkmsServiceKeyJwkKeyOutput
}

type GetOkmsServiceKeyJwkKeyArgs struct {
	// The algorithm intended to be used with the key
	Alg pulumi.StringInput `pulumi:"alg"`
	// The cryptographic curve used with the key
	Crv pulumi.StringInput `pulumi:"crv"`
	// The exponent value for the RSA public key
	E pulumi.StringInput `pulumi:"e"`
	// The operation for which the key is intended to be used
	KeyOps pulumi.StringArrayInput `pulumi:"keyOps"`
	// key ID parameter used to match a specific key
	Kid pulumi.StringInput `pulumi:"kid"`
	// Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC
	Kty pulumi.StringInput `pulumi:"kty"`
	// The modulus value for the RSA public key
	N pulumi.StringInput `pulumi:"n"`
	// The intended use of the public key
	Use pulumi.StringInput `pulumi:"use"`
	// The x coordinate for the Elliptic Curve point
	X pulumi.StringInput `pulumi:"x"`
	// The y coordinate for the Elliptic Curve point
	Y pulumi.StringInput `pulumi:"y"`
}

func (GetOkmsServiceKeyJwkKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOkmsServiceKeyJwkKey)(nil)).Elem()
}

func (i GetOkmsServiceKeyJwkKeyArgs) ToGetOkmsServiceKeyJwkKeyOutput() GetOkmsServiceKeyJwkKeyOutput {
	return i.ToGetOkmsServiceKeyJwkKeyOutputWithContext(context.Background())
}

func (i GetOkmsServiceKeyJwkKeyArgs) ToGetOkmsServiceKeyJwkKeyOutputWithContext(ctx context.Context) GetOkmsServiceKeyJwkKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOkmsServiceKeyJwkKeyOutput)
}

// GetOkmsServiceKeyJwkKeyArrayInput is an input type that accepts GetOkmsServiceKeyJwkKeyArray and GetOkmsServiceKeyJwkKeyArrayOutput values.
// You can construct a concrete instance of `GetOkmsServiceKeyJwkKeyArrayInput` via:
//
//	GetOkmsServiceKeyJwkKeyArray{ GetOkmsServiceKeyJwkKeyArgs{...} }
type GetOkmsServiceKeyJwkKeyArrayInput interface {
	pulumi.Input

	ToGetOkmsServiceKeyJwkKeyArrayOutput() GetOkmsServiceKeyJwkKeyArrayOutput
	ToGetOkmsServiceKeyJwkKeyArrayOutputWithContext(context.Context) GetOkmsServiceKeyJwkKeyArrayOutput
}

type GetOkmsServiceKeyJwkKeyArray []GetOkmsServiceKeyJwkKeyInput

func (GetOkmsServiceKeyJwkKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOkmsServiceKeyJwkKey)(nil)).Elem()
}

func (i GetOkmsServiceKeyJwkKeyArray) ToGetOkmsServiceKeyJwkKeyArrayOutput() GetOkmsServiceKeyJwkKeyArrayOutput {
	return i.ToGetOkmsServiceKeyJwkKeyArrayOutputWithContext(context.Background())
}

func (i GetOkmsServiceKeyJwkKeyArray) ToGetOkmsServiceKeyJwkKeyArrayOutputWithContext(ctx context.Context) GetOkmsServiceKeyJwkKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOkmsServiceKeyJwkKeyArrayOutput)
}

type GetOkmsServiceKeyJwkKeyOutput struct{ *pulumi.OutputState }

func (GetOkmsServiceKeyJwkKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOkmsServiceKeyJwkKey)(nil)).Elem()
}

func (o GetOkmsServiceKeyJwkKeyOutput) ToGetOkmsServiceKeyJwkKeyOutput() GetOkmsServiceKeyJwkKeyOutput {
	return o
}

func (o GetOkmsServiceKeyJwkKeyOutput) ToGetOkmsServiceKeyJwkKeyOutputWithContext(ctx context.Context) GetOkmsServiceKeyJwkKeyOutput {
	return o
}

// The algorithm intended to be used with the key
func (o GetOkmsServiceKeyJwkKeyOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.Alg }).(pulumi.StringOutput)
}

// The cryptographic curve used with the key
func (o GetOkmsServiceKeyJwkKeyOutput) Crv() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.Crv }).(pulumi.StringOutput)
}

// The exponent value for the RSA public key
func (o GetOkmsServiceKeyJwkKeyOutput) E() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.E }).(pulumi.StringOutput)
}

// The operation for which the key is intended to be used
func (o GetOkmsServiceKeyJwkKeyOutput) KeyOps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) []string { return v.KeyOps }).(pulumi.StringArrayOutput)
}

// key ID parameter used to match a specific key
func (o GetOkmsServiceKeyJwkKeyOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.Kid }).(pulumi.StringOutput)
}

// Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC
func (o GetOkmsServiceKeyJwkKeyOutput) Kty() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.Kty }).(pulumi.StringOutput)
}

// The modulus value for the RSA public key
func (o GetOkmsServiceKeyJwkKeyOutput) N() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.N }).(pulumi.StringOutput)
}

// The intended use of the public key
func (o GetOkmsServiceKeyJwkKeyOutput) Use() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.Use }).(pulumi.StringOutput)
}

// The x coordinate for the Elliptic Curve point
func (o GetOkmsServiceKeyJwkKeyOutput) X() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.X }).(pulumi.StringOutput)
}

// The y coordinate for the Elliptic Curve point
func (o GetOkmsServiceKeyJwkKeyOutput) Y() pulumi.StringOutput {
	return o.ApplyT(func(v GetOkmsServiceKeyJwkKey) string { return v.Y }).(pulumi.StringOutput)
}

type GetOkmsServiceKeyJwkKeyArrayOutput struct{ *pulumi.OutputState }

func (GetOkmsServiceKeyJwkKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOkmsServiceKeyJwkKey)(nil)).Elem()
}

func (o GetOkmsServiceKeyJwkKeyArrayOutput) ToGetOkmsServiceKeyJwkKeyArrayOutput() GetOkmsServiceKeyJwkKeyArrayOutput {
	return o
}

func (o GetOkmsServiceKeyJwkKeyArrayOutput) ToGetOkmsServiceKeyJwkKeyArrayOutputWithContext(ctx context.Context) GetOkmsServiceKeyJwkKeyArrayOutput {
	return o
}

func (o GetOkmsServiceKeyJwkKeyArrayOutput) Index(i pulumi.IntInput) GetOkmsServiceKeyJwkKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOkmsServiceKeyJwkKey {
		return vs[0].([]GetOkmsServiceKeyJwkKey)[vs[1].(int)]
	}).(GetOkmsServiceKeyJwkKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OkmsIamInput)(nil)).Elem(), OkmsIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OkmsIamPtrInput)(nil)).Elem(), OkmsIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOkmsResourceIamInput)(nil)).Elem(), GetOkmsResourceIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOkmsServiceKeyJwkKeyInput)(nil)).Elem(), GetOkmsServiceKeyJwkKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOkmsServiceKeyJwkKeyArrayInput)(nil)).Elem(), GetOkmsServiceKeyJwkKeyArray{})
	pulumi.RegisterOutputType(OkmsIamOutput{})
	pulumi.RegisterOutputType(OkmsIamPtrOutput{})
	pulumi.RegisterOutputType(GetOkmsResourceIamOutput{})
	pulumi.RegisterOutputType(GetOkmsServiceKeyJwkKeyOutput{})
	pulumi.RegisterOutputType(GetOkmsServiceKeyJwkKeyArrayOutput{})
}
